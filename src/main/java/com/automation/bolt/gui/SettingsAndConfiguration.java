/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.automation.bolt.gui;

import static com.automation.bolt.common.*;
import com.automation.bolt.constants;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author zakir
 */
public class SettingsAndConfiguration extends javax.swing.JFrame {
    public static String userDirPath;
    public static String chromeDriverPath;
    public static String EdgePath;
    public static JFileChooser importWebDriver;
    
    /**
     * Creates new form SettingsAndConfiguration
     */
    public SettingsAndConfiguration() {
        initComponents();
        SettingsAndConfiguration.super.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSettingAndConfiguration = new javax.swing.JPanel();
        lblSettingsAndConfig = new javax.swing.JLabel();
        pnlClassPath = new javax.swing.JPanel();
        lblClassPath = new javax.swing.JLabel();
        bttnClassPath = new javax.swing.JButton();
        lblSetDriverPath = new javax.swing.JLabel();
        pnlDriverPath = new javax.swing.JPanel();
        lblChromeDriverPath = new javax.swing.JLabel();
        bttnChromeDriver = new javax.swing.JButton();
        lblEdgeDriverPath = new javax.swing.JLabel();
        bttnEdgeDriver = new javax.swing.JButton();
        lblChromeDriver = new javax.swing.JLabel();
        lblEdgeDriver = new javax.swing.JLabel();
        lblSetClassPath = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings & Configuration");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlSettingAndConfiguration.setBackground(new java.awt.Color(51, 51, 51));

        lblSettingsAndConfig.setBackground(new java.awt.Color(0, 153, 153));
        lblSettingsAndConfig.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblSettingsAndConfig.setForeground(new java.awt.Color(255, 255, 255));
        lblSettingsAndConfig.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSettingsAndConfig.setText(" Settings & Configuration");
        lblSettingsAndConfig.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSettingsAndConfig.setOpaque(true);

        pnlClassPath.setBackground(new java.awt.Color(51, 51, 51));
        pnlClassPath.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlClassPath.setDoubleBuffered(false);
        pnlClassPath.setFocusable(false);

        lblClassPath.setBackground(new java.awt.Color(0, 153, 153));
        lblClassPath.setForeground(new java.awt.Color(255, 255, 255));
        lblClassPath.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        lblClassPath.setFocusTraversalPolicyProvider(true);
        lblClassPath.setMaximumSize(new java.awt.Dimension(114, 10));
        lblClassPath.setMinimumSize(new java.awt.Dimension(114, 10));
        lblClassPath.setOpaque(true);
        lblClassPath.setPreferredSize(new java.awt.Dimension(114, 10));

        bttnClassPath.setBackground(new java.awt.Color(0, 153, 153));
        bttnClassPath.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bttnClassPath.setForeground(new java.awt.Color(255, 255, 255));
        bttnClassPath.setText("Browse");
        bttnClassPath.setBorder(null);
        bttnClassPath.setBorderPainted(false);
        bttnClassPath.setContentAreaFilled(false);
        bttnClassPath.setOpaque(true);
        bttnClassPath.setRequestFocusEnabled(false);
        bttnClassPath.setRolloverEnabled(false);
        bttnClassPath.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bttnClassPathMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bttnClassPathMouseExited(evt);
            }
        });
        bttnClassPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnClassPathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlClassPathLayout = new javax.swing.GroupLayout(pnlClassPath);
        pnlClassPath.setLayout(pnlClassPathLayout);
        pnlClassPathLayout.setHorizontalGroup(
            pnlClassPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClassPathLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblClassPath, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttnClassPath, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlClassPathLayout.setVerticalGroup(
            pnlClassPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClassPathLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlClassPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bttnClassPath, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClassPath, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblSetDriverPath.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        lblSetDriverPath.setForeground(new java.awt.Color(255, 255, 204));
        lblSetDriverPath.setText("Set Driver Path");

        pnlDriverPath.setBackground(new java.awt.Color(51, 51, 51));
        pnlDriverPath.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlDriverPath.setDoubleBuffered(false);
        pnlDriverPath.setFocusable(false);

        lblChromeDriverPath.setBackground(new java.awt.Color(0, 153, 153));
        lblChromeDriverPath.setForeground(new java.awt.Color(255, 255, 255));
        lblChromeDriverPath.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        lblChromeDriverPath.setFocusTraversalPolicyProvider(true);
        lblChromeDriverPath.setMaximumSize(new java.awt.Dimension(114, 10));
        lblChromeDriverPath.setMinimumSize(new java.awt.Dimension(114, 10));
        lblChromeDriverPath.setOpaque(true);
        lblChromeDriverPath.setPreferredSize(new java.awt.Dimension(114, 10));

        bttnChromeDriver.setBackground(new java.awt.Color(0, 153, 153));
        bttnChromeDriver.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bttnChromeDriver.setForeground(new java.awt.Color(255, 255, 255));
        bttnChromeDriver.setText("Browse");
        bttnChromeDriver.setBorder(null);
        bttnChromeDriver.setBorderPainted(false);
        bttnChromeDriver.setContentAreaFilled(false);
        bttnChromeDriver.setOpaque(true);
        bttnChromeDriver.setRequestFocusEnabled(false);
        bttnChromeDriver.setRolloverEnabled(false);
        bttnChromeDriver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bttnChromeDriverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bttnChromeDriverMouseExited(evt);
            }
        });
        bttnChromeDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnChromeDriverActionPerformed(evt);
            }
        });

        lblEdgeDriverPath.setBackground(new java.awt.Color(0, 153, 153));
        lblEdgeDriverPath.setForeground(new java.awt.Color(255, 255, 255));
        lblEdgeDriverPath.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEdgeDriverPath.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        lblEdgeDriverPath.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        lblEdgeDriverPath.setMaximumSize(new java.awt.Dimension(14, 10));
        lblEdgeDriverPath.setMinimumSize(new java.awt.Dimension(14, 10));
        lblEdgeDriverPath.setOpaque(true);
        lblEdgeDriverPath.setPreferredSize(new java.awt.Dimension(14, 10));

        bttnEdgeDriver.setBackground(new java.awt.Color(0, 153, 153));
        bttnEdgeDriver.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bttnEdgeDriver.setForeground(new java.awt.Color(255, 255, 255));
        bttnEdgeDriver.setText("Browse");
        bttnEdgeDriver.setBorder(null);
        bttnEdgeDriver.setBorderPainted(false);
        bttnEdgeDriver.setContentAreaFilled(false);
        bttnEdgeDriver.setOpaque(true);
        bttnEdgeDriver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bttnEdgeDriverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bttnEdgeDriverMouseExited(evt);
            }
        });
        bttnEdgeDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnEdgeDriverActionPerformed(evt);
            }
        });

        lblChromeDriver.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir").replaceAll("\\\\", "/")+"/icons/browserChromeSettingsAndConfig.png"));

            lblEdgeDriver.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir").replaceAll("\\\\", "/")+"/icons/browserEdgeSettingsAndConfig.png"));

                javax.swing.GroupLayout pnlDriverPathLayout = new javax.swing.GroupLayout(pnlDriverPath);
                pnlDriverPath.setLayout(pnlDriverPathLayout);
                pnlDriverPathLayout.setHorizontalGroup(
                    pnlDriverPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDriverPathLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlDriverPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDriverPathLayout.createSequentialGroup()
                                .addComponent(lblChromeDriver)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblChromeDriverPath, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDriverPathLayout.createSequentialGroup()
                                .addComponent(lblEdgeDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(lblEdgeDriverPath, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(pnlDriverPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDriverPathLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bttnChromeDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(392, 392, 392))
                            .addGroup(pnlDriverPathLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bttnEdgeDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                );
                pnlDriverPathLayout.setVerticalGroup(
                    pnlDriverPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDriverPathLayout.createSequentialGroup()
                        .addGroup(pnlDriverPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDriverPathLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(pnlDriverPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblChromeDriver, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblChromeDriverPath, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDriverPathLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(bttnChromeDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDriverPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEdgeDriver)
                            .addGroup(pnlDriverPathLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(pnlDriverPathLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblEdgeDriverPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bttnEdgeDriver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(10, 10, 10))
                );

                lblSetClassPath.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
                lblSetClassPath.setForeground(new java.awt.Color(255, 255, 204));
                lblSetClassPath.setText("Set User Define Class Path For User Define Methods");

                javax.swing.GroupLayout pnlSettingAndConfigurationLayout = new javax.swing.GroupLayout(pnlSettingAndConfiguration);
                pnlSettingAndConfiguration.setLayout(pnlSettingAndConfigurationLayout);
                pnlSettingAndConfigurationLayout.setHorizontalGroup(
                    pnlSettingAndConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSettingsAndConfig, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSettingAndConfigurationLayout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addGroup(pnlSettingAndConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlClassPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSetClassPath)
                            .addComponent(lblSetDriverPath))
                        .addContainerGap())
                    .addGroup(pnlSettingAndConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSettingAndConfigurationLayout.createSequentialGroup()
                            .addContainerGap(20, Short.MAX_VALUE)
                            .addComponent(pnlDriverPath, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                );
                pnlSettingAndConfigurationLayout.setVerticalGroup(
                    pnlSettingAndConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSettingAndConfigurationLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lblSettingsAndConfig)
                        .addGap(18, 18, 18)
                        .addComponent(lblSetDriverPath)
                        .addGap(98, 98, 98)
                        .addComponent(lblSetClassPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlClassPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(11, Short.MAX_VALUE))
                    .addGroup(pnlSettingAndConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlSettingAndConfigurationLayout.createSequentialGroup()
                            .addGap(74, 74, 74)
                            .addComponent(pnlDriverPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(88, Short.MAX_VALUE)))
                );

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlSettingAndConfiguration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(pnlSettingAndConfiguration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                );

                pack();
            }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       Image titleIcon = Toolkit.getDefaultToolkit().getImage(constants.userDir+"\\icons\\bolt.jpg");
       this.setIconImage(titleIcon);
    }//GEN-LAST:event_formWindowOpened

    private void bttnClassPathMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnClassPathMouseEntered
        changeButtonColorMouseEnter(bttnClassPath);
    }//GEN-LAST:event_bttnClassPathMouseEntered

    private void bttnClassPathMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnClassPathMouseExited
        changeButtonColorMouseExit(bttnClassPath);
    }//GEN-LAST:event_bttnClassPathMouseExited

    private void bttnClassPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnClassPathActionPerformed
        browserForFileOnButtonClick("Add Class Path", lblClassPath, "","java");
    }//GEN-LAST:event_bttnClassPathActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        //AutomationTestRunner xFrame = new AutomationTestRunner();
        //xFrame.toFront();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        /*if(!lblChromeDriverPath.getText().isEmpty())
            lblChromeDriverPath.setToolTipText(lblChromeDriverPath.getText());
        
        if(!lblEdgeDriverPath.getText().isEmpty())
            lblEdgeDriverPath.setToolTipText(lblEdgeDriverPath.getText());
        
        if(!lblClassPath.getText().isEmpty())
            lblClassPath.setToolTipText(lblClassPath.getText());*/
    }//GEN-LAST:event_formWindowActivated

    private void bttnEdgeDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnEdgeDriverActionPerformed
        browserForFileOnButtonClick("Add Edge Driver", lblEdgeDriverPath, "edgeDriver","exe");
    }//GEN-LAST:event_bttnEdgeDriverActionPerformed

    private void bttnEdgeDriverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnEdgeDriverMouseExited
        changeButtonColorMouseExit(bttnEdgeDriver);
    }//GEN-LAST:event_bttnEdgeDriverMouseExited

    private void bttnEdgeDriverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnEdgeDriverMouseEntered
        changeButtonColorMouseEnter(bttnEdgeDriver);
    }//GEN-LAST:event_bttnEdgeDriverMouseEntered

    private void bttnChromeDriverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnChromeDriverActionPerformed
        browserForFileOnButtonClick("Add Chrome Driver", lblChromeDriverPath, "chromeDriver","exe");
    }//GEN-LAST:event_bttnChromeDriverActionPerformed

    private void bttnChromeDriverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnChromeDriverMouseExited
        changeButtonColorMouseExit(bttnChromeDriver);
    }//GEN-LAST:event_bttnChromeDriverMouseExited

    private void bttnChromeDriverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bttnChromeDriverMouseEntered
        changeButtonColorMouseEnter(bttnChromeDriver);
    }//GEN-LAST:event_bttnChromeDriverMouseEntered
    
    public static void changeButtonColorMouseEnter(JButton button){
        button.setBackground(new java.awt.Color(250, 128, 114));
        button.setForeground(new java.awt.Color(0, 0, 0));
    }
    
    public static void changeButtonColorMouseExit(JButton button){
        button.setBackground(new java.awt.Color(0, 153, 153));
        button.setForeground(new java.awt.Color(255, 255, 255));
    }
    
    public void browserForFileOnButtonClick(String dialogTitle, JLabel label, String text, String fileType){
        String getCurrDir;
        
        try{
            File getCurrDirectory =importWebDriver.getCurrentDirectory();
            getCurrDir =getCurrDirectory.getAbsolutePath();
        }catch(NullPointerException exp){
            getCurrDir =FileSystemView.getFileSystemView().getDefaultDirectory().getPath();
        }
        
        importWebDriver = new JFileChooser(getCurrDir);
        importWebDriver.setFileSelectionMode(JFileChooser.FILES_ONLY);
        importWebDriver.setDialogTitle("Add Chrome Driver");
        importWebDriver.addChoosableFileFilter(new FileNameExtensionFilter("EXE file", ""+fileType+""));
        //importWebDriver.setAcceptAllFileFilterUsed(false);

        int exeChooser = importWebDriver.showOpenDialog(this);
        if (exeChooser == JFileChooser.APPROVE_OPTION){
            label.setText(importWebDriver.getSelectedFile().getAbsolutePath());
            setDriverPathToJSONfile(text);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsAndConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsAndConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsAndConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsAndConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsAndConfiguration().setVisible(true); 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnChromeDriver;
    public static javax.swing.JButton bttnClassPath;
    private javax.swing.JButton bttnEdgeDriver;
    private javax.swing.JLabel lblChromeDriver;
    private javax.swing.JLabel lblChromeDriverPath;
    public static javax.swing.JLabel lblClassPath;
    private javax.swing.JLabel lblEdgeDriver;
    private javax.swing.JLabel lblEdgeDriverPath;
    public static javax.swing.JLabel lblSetClassPath;
    private javax.swing.JLabel lblSetDriverPath;
    public static javax.swing.JLabel lblSettingsAndConfig;
    public static javax.swing.JPanel pnlClassPath;
    private javax.swing.JPanel pnlDriverPath;
    public static javax.swing.JPanel pnlSettingAndConfiguration;
    // End of variables declaration//GEN-END:variables
}
